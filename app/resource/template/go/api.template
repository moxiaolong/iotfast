// ==========================================================================
// 物联网快速开发自动生成API操作代码，无需手动修改，重新生成不会自动覆盖.
// 生成日期：{{.table.CreateTime}}
// 生成路径:/api/v1/{{.table.ModuleName}}/{{.table.TableName}}.go
// 生成人：{{.table.FunctionAuthor}}
// ==========================================================================
////
package {{.table.ModuleName}}

{{$businessName := .table.BusinessName | CaseCamelLower}}


{{$hasGTime:=false}}
{{range $index, $column := .table.Columns}}
{{if eq $column.GoType "Time"}}
{{$hasGTime = true}}
{{end}}
{{end}}

import (
    commonApi "github.com/xiaodingding/iotfast/api/v1/common"
    //"github.com/xiaodingding/{{.table.PackageName}}/{{.table.ModuleName}}/model"
    "github.com/xiaodingding/{{.table.PackageName}}/{{.table.ModuleName}}/model/entity"
    {{if $hasGTime}}
    "github.com/gogf/gf/v2/os/gtime"
    {{end}}
    "github.com/gogf/gf/v2/frame/g"
)


////
// Fill with you ideas below.
////


// {{.table.ClassName}}SearchReq 分页请求参数
type {{.table.ClassName}}SearchReq struct {
    g.Meta   `path:"/{{$businessName}}/list" tags:"{{.table.FunctionName}}" method:"get" summary:"{{.table.FunctionName}}列表"`
    {{range $index, $column := .table.Columns}}
    {{if eq $column.IsQuery "1"}}
    {{$column.GoField}}  {{if eq $column.GoType "Time"}}*gtime.Time{{else if or (eq $column.GoType "int") (eq $column.GoType "int64") (eq $column.GoType "uint") (eq $column.GoType "uint64")}}string{{else}}{{$column.GoType}}{{end}} `p:"{{$column.HtmlField}}"` //{{$column.ColumnComment}}
    {{end}}
    {{end}}
    BeginTime    string `p:"beginTime"`    //开始时间
	EndTime      string `p:"endTime"`      //结束时间
    commonApi.PageReq
}


type {{.table.ClassName}}SearchRes struct {
    g.Meta `mime:"application/json"`
    commonApi.ListRes
    List []*entity.{{.table.ClassName}} `json:"list"`
}

type {{.table.ClassName}}GetReq struct {
    g.Meta   `path:"/{{$businessName}}/get" tags:"{{.table.FunctionName}}" method:"get" summary:"获取{{.table.FunctionName}}数据"`
    Id int `p:"id"`
}

type {{.table.ClassName}}GetRes struct {
    g.Meta `mime:"application/json"`
    *entity.{{.table.ClassName}}
}

// {{.table.ClassName}}AddReq 添加操作请求参数
type {{.table.ClassName}}AddReq struct {
    g.Meta `path:"/{{$businessName}}/add" tags:"{{.table.FunctionName}}" method:"post" summary:"添加{{.table.FunctionName}}"`
    {{range $index, $column := .table.Columns}}
    {{if and (eq $column.IsInsert "1") (ne $column.IsPk "1")}}
    {{$column.GoField}}  {{if eq $column.GoType "Time"}}*gtime.Time{{else}}{{$column.GoType}}{{end}}   `p:"{{$column.HtmlField}}" {{if eq $column.IsRequired "1"}}v:"required#{{$column.ColumnComment}}不能为空"{{end}}`
    {{end}}
    {{if eq $column.ColumnName "created_by"}}CreatedBy       uint64 {{end}}
    {{end}}
}


type {{.table.ClassName}}AddRes struct {
}

// {{.table.ClassName}}EditReq 修改操作请求参数
type {{.table.ClassName}}EditReq struct {
    g.Meta `path:"/{{$businessName}}/edit" tags:"{{.table.FunctionName}}" method:"put" summary:"修改{{.table.FunctionName}}"`
    {{.table.PkColumn.GoField}}    {{.table.PkColumn.GoType}}  `p:"{{.table.PkColumn.HtmlField}}" v:"required#主键ID不能为空"`
    {{range $index, $column := .table.Columns}}
    {{if eq $column.IsEdit "1"}}
    {{$column.GoField}}  {{if eq $column.GoType "Time"}}*gtime.Time{{else}}{{$column.GoType}}{{end}} `p:"{{$column.HtmlField}}" {{if eq $column.IsRequired "1"}}v:"required#{{$column.ColumnComment}}不能为空"{{end}}`{{end}}
    {{if eq $column.ColumnName "updated_by"}}UpdatedBy       uint64 {{end}}
    {{end}}
}

type {{.table.ClassName}}EditRes struct {
}



{{range $index,$column:= .table.Columns}}
{{if and (HasSuffix $column.ColumnName "status") (eq $column.IsList "1") }}
// {{$.table.ClassName}}{{$column.GoField}}Req 设置用户状态参数
type {{$.table.ClassName}}{{$column.GoField}}Req struct {
    g.Meta `path:"/{{$businessName}}/status" tags:"{{$.table.FunctionName}}" method:"put" summary:"修改{{$.table.FunctionName}}状态"`
	{{$.table.PkColumn.GoField}}    {{$.table.PkColumn.GoType}}  `p:"{{$.table.PkColumn.HtmlField}}" v:"required#主键ID不能为空"`
	{{$column.GoField}} {{$column.GoType}}   `p:"{{$column.HtmlField}}" v:"required#{{$column.ColumnComment}}不能为空"`
}

type {{$.table.ClassName}}{{$column.GoField}}Res struct {
}
{{end}}
{{end}}


type  {{.table.ClassName}}DeleteReq struct {
    g.Meta `path:"/{{$businessName}}/delete" tags:"{{.table.FunctionName}}" method:"delete" summary:"删除{{.table.FunctionName}}"`
    Ids    []int `p:"ids"`
}

type  {{.table.ClassName}}DeleteRes struct {
}
